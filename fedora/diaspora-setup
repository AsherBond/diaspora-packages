#!/bin/bash
#
#  Do what's needed to initiate diaspora.
#
#  Usage: # ./diaspora-setup [external hostname]
#
export PATH=$PATH:/usr/local/bin

arg_hostname="$1"

path=$( readlink -fn $0) && cd $(dirname $path)/../.. || \
    cd /usr/share/diaspora/master

. pkg/source/funcs.sh

test $UID = "0" || {
    echo "You need to be root to do this, giving up"
    exit 2
}

services=$( netstat -nl | grep '[^:]:3000[ \t]')
test -n "$services" && {
    echo "Warning: something is already using port 3000"
    echo "     $services"
}

/sbin/service mongod start || :


libdir=$(rpm --eval %_libdir)

rm -rf vendor
ln -s $libdir/diaspora-bundle/vendor .
ln -sf $libdir/diaspora-bundle/Gemfile .
ln -sf $libdir/diaspora-bundle/Gemfile.lock .
ln -sf $libdir/diaspora-bundle/config .bundle/config

test -e config/app_config.yml ||
    cp config/app_config.yml.example config/app_config.yml

[ -e  lib/tasks/jasmine.rake ] &&
    sudo mv lib/tasks/jasmine.rake lib/tasks/jasmine.no-rake

init_appconfig config/app_config.yml $arg_hostname

if bundle exec rake db:seed:dev; then
    echo "Database config OK, users tom/evankorth, korth/evankorth in place"
else
    cat <<- EOF

	Database config failed. You might want to remove all db files with
	'rm -rf /var/lib/mongodb/*' and/or reset the config file by
	'cp config/app_config.yml.example config/app_config.yml' before
	making a new try. Also, make sure the mongodb server is running
	e. g., using '/sbin/service mongod status'.
	EOF
fi

init_public

chown -R diaspora /var/log/diaspora

sed -i '/socket_pidfile:/s|:.*|: /var/run/diaspora/diaspora-wsd.pid|' \
    config/app_config.yml
